# use UTF8
set -g utf8
set-window-option -g utf8 on

# setw -g xterm-keys on
# Report that we can handle 256 colors
# set -g default-terminal "screen-256color"
# set -g default-terminal "rvxt-unicode-256color"

if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
# brew install macvim --override-system-vim
# brew install tmux
# brew install reattach-to-user-namespace --wrap-pbcopy-and-pbpaste
# set-option -g default-command "reattach-to-user-namespace -l bash"

set-option -g prefix C-x
unbind-key C-b
bind-key C-x send-prefix

#next tab
bind-key -n M-right next
#previous tab
bind-key -n M-left prev

set -g history-limit 9999
set -g status-keys vi

bind-key -t vi-edit Up    history-up
bind-key -t vi-edit Down  history-down

# I'm a Vim user, this makes navigation easier
setw -g mode-keys vi # I especially like being able to search with /,? when in copy-mode
unbind-key j
bind-key j select-pane -D # Similar to 'C-x j' to navigate windows in Vim
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Bad Wolf
# set -g status-fg white
# set -g status-bg colour234
# set -g window-status-activity-attr bold
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39
# set -g message-fg colour16
# set -g message-bg colour221
# set -g message-attr bold

# Reload key
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# # Custom status bar
# # Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
set -g status-bg "#151513"
set -g status-fg "#808070"
set -g status-attr default

set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

# active window title colours
set-window-option -g window-status-current-fg "#fad07a"
set-window-option -g window-status-current-bg default

# set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
# # set -g status-right '#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour245,nobold]#(~/local/bin/itunes-current-track.sh)#[fg=colour252,bold]⮂#[fg=colour238,bg=colour252,bold] #h '
# set -g window-status-format "#[fg=white,bg=colour234] #I #W "
# set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
# bind t run-shell 'wemux display_users'
#
# Alternate Theme for shells without Inconsolata-dz-Powerline:
set -g status-left ' #[bold]❐ #S#[default] ⣿ '
set -g status-right '#[bold]#(whoami) ● #H#[default] ⡇ #[fg=blue]%H:%M#[default] '


# set -g status on
# set -g status-utf8 on
# set -g status-interval 2
# set -g status-fg black
# set -g status-right '#[bg=colour233] #[fg=white,bg=colour234] %H:%M #[fg=yellow,bg=colour233]'
# set -g status-left '#[fg=colour16,bg=colour232,bold] #S #[fg=colour254,bg=colour234,nobold]'
# set -g window-status-format "#[fg=colour16,bg=colour234] #I #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# set -g window-status-separator ""

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Set status bar
# set -g status-bg black
# set -g status-fg white
# set -g status-left '#[fg=green]#H'
# set -g status-right '#[fg=yellow]#(uptime | cut -d " " -f3,4,5,6,7,8,10-)'
# Highlight active window
# set-window-option -g window-status-current-bg red
#

# ctrl-x Page Up / Down
# Enable mouse support (works in iTerm)
set-window-option -g mode-mouse off
set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off

setw -g automatic-rename on
setw -g mode-keys vi
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-selection

# setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# set -g status-keys vi
# bind-key -t vi-edit Up   history-up
# bind-key -t vi-edit Down history-down

# Sync tmux panes
bind m setw synchronize-panes

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vim-ish movement between and resizing of panes
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# remap kill window, add confirm map before killing server
# unbind &
# bind-key K confirm kill-window
# bind-key X confirm kill-server

unbind %
bind | split-window -h
bind - split-window -v

# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

bind r source-file ~/.tmux.conf

# Session initialization

# Keys to switch session.
# bind-key Q switchc -tperl
# bind-key W switchc -tdev
# bind-key E switchc -tpy

# need a default session despite the conditionals below
# new-session -d -s throwaway

# this is the best way I can find to manage host-conditional sessions
# with tmux's current config capabilities
# if '[ `hostname -s` = Joaos-MacBook-Pro ] && ! tmux has-session -t main' 'source-file $HOME/.tmux/joao_mbp.conf'
#

bind-key M-c run-shell "exec tput clear"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

